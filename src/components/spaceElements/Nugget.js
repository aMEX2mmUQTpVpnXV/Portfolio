/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: lulu9green (https://sketchfab.com/lulu9green)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/mars-mission-specialist-nugget-d65c0d7241fb4315ba15de17a84f8b36
title: Mars Mission Specialist Nugget
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "react-three-fiber";

export function Nugget(props) {
  const { nodes, materials } = useGLTF("nugget.gltf");
  const myMesh = React.useRef();
  const openInNewTab = (url) => {
    const newWindow = window.open(url, "_blank", "noopener,noreferrer");
    if (newWindow) newWindow.opener = null;
  };

  function randNum() {
    const min = -0.01;
    const max = 0.01;
    const rand = min + Math.random() * (max - min);
    return rand;
  }
  function randSpeed() {
    const min = 0.004;
    const max = 0.009;
    const rand = min + Math.random() * (max - min);
    return rand;
  }

  const xrotation = randNum();
  const yrotation = randNum();
  const zrotation = randNum();
  const speed = randSpeed();

  useFrame(({ clock }) => {
    myMesh.current.rotation.x += xrotation;
    myMesh.current.rotation.y += yrotation;
    myMesh.current.rotation.z -= zrotation;
    myMesh.current.position.x -= speed;
    myMesh.current.position.z -= 0;
    if (myMesh.current.position.x < -10) {
      myMesh.current.position.x = props.x;
      myMesh.current.position.y = props.y;
      myMesh.current.position.z = props.z;
    }
  });
  return (
    <group
      {...props}
      dispose={null}
      position={[props.x, props.y, props.z]}
      scale={props.scale}
      rotation={[
        Math.PI * props.rotX,
        Math.PI * props.rotY,
        Math.PI * props.rotZ,
      ]}
    >
      <mesh
        ref={myMesh}
        onClick={() =>
          openInNewTab(
            "https://amex2mmuqtpvpnxv.github.io/Portfolio/#/responsive"
          )
        }
      >
        {" "}
        <group rotation={[-Math.PI / 2, 0, 0]} scale={0.36}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[Math.PI / 2, 0, 0]}>
              <group rotation={[-Math.PI / 2, 0, 0]}>
                <mesh
                  geometry={nodes.Object_6.geometry}
                  material={materials["Material.001"]}
                />
              </group>
              <group rotation={[-Math.PI / 2, 0, 0]}>
                <mesh
                  geometry={nodes.Object_9.geometry}
                  material={materials["default"]}
                />
              </group>
              <group rotation={[-Math.PI / 2, 0, 0]}>
                <mesh
                  geometry={nodes.Object_12.geometry}
                  material={materials["default"]}
                />
              </group>
            </group>
          </group>
        </group>
      </mesh>
    </group>
  );
}

useGLTF.preload("nugget.gltf");
